# ================================= A test case =================================
library(pcalg)
library(graph)
library(MASS)
library(tictoc)
library(igraph)
library(mice)
library(micd)
library(miceadds)
library(dplyr)
source("R/MeeksRules.R")
source("R/tcheckTriple.R")
source("R/tpc_cons_intern.R")
source("R/tskeleton.R")
source("R/tskeleton_parallel.R")
source("R/tpc.R")

for (i in 1:5){
    # read data as imputed_data
    dataset_path <- file.path(paste0("imputed_datasets/imp", i, "/imp", i, ".Rdata"),
                                     fsep = .Platform$file.sep)
    load.Rdata(dataset_path, "imputed_data")

    # make suffStat
    suffStatMI <- micd::getSuff(imputed_data, test="gaussMItest")

    # input params to pc
    p <- imputed_data[[1]] %>% length()
    alpha <- 0.01
    max_order <- 10
    tiers_ <- rep(c(1,2,3,4,5), times = c(2,2,2,2,2))
    # tiers_ <- rep(c(1, 2, 3, 4, 5), times = c(20, 20, 20, 20, 20))
    cat("Fitting with alpha =", alpha, "\n")
    tic()
    cuda_tPC <- tpc(suffStatMI, indepTest = micd::gaussMItest, p = p, alpha = alpha, m.max = max_order, skel.method = "cuda", verbose = FALSE, tiers = tiers_)
    cat("\n")
    cat("cuda_tPC\n")
    print(cuda_tPC)
    cat("\n")
    cat("cuda_tPC ord =", cuda_tPC@max.ord, "\n")
    cat("alpha    =", alpha, "\n\n")
    cat("Time consumed:\n")
    toc()
    cat("\n")

    suffStatMICD <- micd::getSuff(imputed_data, test="gaussMItest")
    tic()
    micd_tPC <- tpc(suffStatMICD, indepTest = gaussMItest, p = p, alpha = alpha, skel.method = "stable", m.max = max_order, tiers = tiers_)
    cat("\n")
    cat("micd_tPC\n")
    print(micd_tPC)
    cat("\n")
    cat("micd_tPC ord =", micd_tPC@max.ord, "\n")
    cat("alpha    =", alpha, "\n\n")
    cat("Time consumed:\n")
    toc()
    cat("\n")

    mask <- near(micd_tPC@pMax, cuda_tPC@pMax, tol = 0.001)
    lst1 <- micd_tPC@pMax[!mask]
    lst2 <- cuda_tPC@pMax[!mask]
    h <- 0
    j <- 0
    for (i in 1:length(lst1)){
        if (lst2[i] != -Inf){
            # cat(lst1[i], lst2[i], "\n")
            h <- h + 1
        }
        j <- j + 1
    }
    cat("Number of pvals not equal             : ", j, "\n")
    cat("Number of pvals not equal without -Inf: ", h, "\n")
    cat("shd:", shd(micd_tPC, cuda_tPC), "hd:", shd(ugraph(micd_tPC@graph), ugraph(cuda_tPC@graph)), "\n")
}
